　　"^/d+$"　　 //非负整数(正整数 + 0)
　　"^[0-9]*[1-9][0-9]*$"　　 //正整数
　　"^((-/d+)|(0+))$"　　 //非正整数(负整数 + 0)
　　"^-[0-9]*[1-9][0-9]*$"　　 //负整数
　　"^-?/d+$"　　　　 //整数
　　"^/d+(/./d+)?$"　　 //非负浮点数(正浮点数 + 0)
　　"^(([0-9]+/.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*/.[0-9]+)|([0-9]*[1-9][0-9]*))$"　　//正浮点数
　　"^((-/d+(/./d+)?)|(0+(/.0+)?))$"　　//非正浮点数(负浮点数 + 0)
　　"^(-(([0-9]+/.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*/.[0-9]+)|([0-9]*[1-9][0-9]*)))$"　　//负浮点数
　　"^(-?/d+)(/./d+)?$"　　 //浮点数
　　"^[A-Za-z]+$"　　 //由26个英文字母组成的字符串
　　"^[A-Z]+$"　　 //由26个英文字母的大写组成的字符串
　　"^[a-z]+$"　　 //由26个英文字母的小写组成的字符串
　　"^[A-Za-z0-9]+$"　　 //由数字和26个英文字母组成的字符串
　　"^/w+$"　　 //由数字、26个英文字母或者下划线组成的字符串
　　"^[/w-]+(/.[/w-]+)*@[/w-]+(/.[/w-]+)+$"　　　　//email地址
　　"^[a-zA-z]+://(/w+(-/w+)*)(/.(/w+(-/w+)*))*(/?/S*)?$"　　//url
　　/^(d{2}|d{4})-((0([1-9]{1}))|(1[1|2]))-(([0-2]([1-9]{1}))|(3[0|1]))$/ // 年-月-日
　　/^((0([1-9]{1}))|(1[1|2]))/(([0-2]([1-9]{1}))|(3[0|1]))/(d{2}|d{4})$/ // 月/日/年
　　"^([w-.]+)@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.)|(([w-]+.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(]?)$" //Emil
　　"(d+-)?(d{4}-?d{7}|d{3}-?d{8}|^d{7,8})(-d+)?" //电话号码
　　"^(d{1,2}|1dd|2[0-4]d|25[0-5]).(d{1,2}|1dd|2[0-4]d|25[0-5]).(d{1,2}|1dd|2[0-4]d|25[0-5]).(d{1,2}|1dd|2[0-4]d|25[0-5])$" //IP地址
　　匹配中文字符的正则表达式： [/u4e00-/u9fa5]
　　匹配双字节字符(包括汉字在内)：[^/x00-/xff]
　　匹配空行的正则表达式：/n[/s| ]*/r
　　匹配HTML标记的正则表达式：/<(.*)>.*|<(.*) //>/
　　匹配首尾空格的正则表达式：(^/s*)|(/s*$)
　　匹配Email地址的正则表达式：/w+([-+.]/w+)*@/w+([-.]/w+)*/./w+([-.]/w+)*
　　匹配网址URL的正则表达式：^[a-zA-z]+://(//w+(-//w+)*)(//.(//w+(-//w+)*))*(//?//S*)?$
　　匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$
　　匹配国内电话号码：(/d{3}-|/d{4}-)?(/d{8}|/d{7})?
　　匹配腾讯QQ号：^[1-9]*[1-9][0-9]*$
　　元字符及其在正则表达式上下文中的行为：
　　/ 将下一个字符标记为一个特殊字符、或一个原义字符、或一个后向引用、或一个八进制转义符。
　　^ 匹配输入字符串的开始位置。如果设置了 RegExp 对象的Multiline 属性，^ 也匹配 '/n' 或 '/r' 之后的位置。
　　$ 匹配输入字符串的结束位置。如果设置了 RegExp 对象的Multiline 属性，$ 也匹配 '/n' 或 '/r' 之前的位置。
　　* 匹配前面的子表达式零次或多次。
　　+ 匹配前面的子表达式一次或多次。+ 等价于 {1,}。
　　? 匹配前面的子表达式零次或一次。? 等价于 {0,1}。
　　{n} n 是一个非负整数，匹配确定的n 次。
　　{n,} n 是一个非负整数，至少匹配n 次。
　　{n,m} m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。在逗号和两个数之间不能有空格。
　　? 当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。
　　. 匹配除 "/n" 之外的任何单个字符。要匹配包括 '/n' 在内的任何字符，请使用象 '[./n]' 的模式。
　　(pattern) 匹配pattern 并获取这一匹配。
　　(?:pattern) 匹配pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。
　　(?=pattern) 正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。
　　(?!pattern) 负向预查，与(?=pattern)作用相反
　　x|y 匹配 x 或 y。
　　[xyz] 字符集合。
　　[^xyz] 负值字符集合。
　　[a-z] 字符范围，匹配指定范围内的任意字符。
　　[^a-z] 负值字符范围，匹配任何不在指定范围内的任意字符。
　　/b 匹配一个单词边界，也就是指单词和空格间的位置。
　　/B 匹配非单词边界。
　　/cx 匹配由x指明的控制字符。
　　/d 匹配一个数字字符。等价于 [0-9]。
　　/D 匹配一个非数字字符。等价于 [^0-9]。
　　/f 匹配一个换页符。等价于 /x0c 和 /cL。
　　/n 匹配一个换行符。等价于 /x0a 和 /cJ。
　　/r 匹配一个回车符。等价于 /x0d 和 /cM。
　　/s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ /f/n/r/t/v]。
　　/S 匹配任何非空白字符。等价于 [^ /f/n/r/t/v]。
　　/t 匹配一个制表符。等价于 /x09 和 /cI。
　　/v 匹配一个垂直制表符。等价于 /x0b 和 /cK。
　　/w 匹配包括下划线的任何单词字符。等价于'[A-Za-z0-9_]'。
　　/W 匹配任何非单词字符。等价于 '[^A-Za-z0-9_]'。
　　/xn 匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。
　　/num 匹配 num，其中num是一个正整数。对所获取的匹配的引用。
　　/n 标识一个八进制转义值或一个后向引用。如果 /n 之前至少 n 个获取的子表达式，则 n 为后向引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。
　　/nm 标识一个八进制转义值或一个后向引用。如果 /nm 之前至少有is preceded by at least nm 个获取得子表达式，则 nm 为后向引用。如果 /nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的后向引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 /nm 将匹配八进制转义值 nm。
　　/nml 如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。
　　/un 匹配 n，其中 n 是一个用四个十六进制数字表示的Unicode字符。
　　匹配中文字符的正则表达式： [u4e00-u9fa5]
　　匹配双字节字符(包括汉字在内)：[^x00-xff]
　　匹配空行的正则表达式：n[s| ]*r
　　匹配HTML标记的正则表达式：/<(.*)>.*|<(.*) />/
　　匹配首尾空格的正则表达式：(^s*)|(s*$)
　　匹配Email地址的正则表达式：w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*
　　匹配网址URL的正则表达式：http://([w-]+.)+[w-]+(/[w- ./?%&=]*)?
　　利用正则表达式限制网页表单里的文本框输入内容：
　　用正则表达式限制只能输入中文：onkeyup="value=value.replace(/[^u4E00-u9FA5]/g,'')" onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^u4E00-u9FA5]/g,''))"
　　用正则表达式限制只能输入全角字符： onkeyup="value=value.replace(/[^uFF00-uFFFF]/g,'')" onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^uFF00-uFFFF]/g,''))"
　　用正则表达式限制只能输入数字：onkeyup="value=value.replace(/[^d]/g,'') "onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^d]/g,''))"
　　用正则表达式限制只能输入数字和英文：onkeyup="value=value.replace(/[W]/g,'') "onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^d]/g,''))"
　　****************************************************************************************************
　　只能输入数字："^[0-9]*$"。
　　只能输入n位的数字："^/d{n}$"。
　　只能输入至少n位的数字："^/d{n,}$"。
　　只能输入m~n位的数字：。"^/d{m,n}$"
　　只能输入零和非零开头的数字："^(0|[1-9][0-9]*)$"。
　　只能输入有两位小数的正实数："^[0-9]+(.[0-9]{2})?$"。
　　只能输入有1~3位小数的正实数："^[0-9]+(.[0-9]{1,3})?$"。
　　只能输入非零的正整数："^/+?[1-9][0-9]*$"。
　　只能输入非零的负整数："^/-[1-9][]0-9"*$。
　　只能输入长度为3的字符："^.{3}$"。
　　只能输入由26个英文字母组成的字符串："^[A-Za-z]+$"。
　　只能输入由26个大写英文字母组成的字符串："^[A-Z]+$"。
　　只能输入由26个小写英文字母组成的字符串："^[a-z]+$"。
　　只能输入由数字和26个英文字母组成的字符串："^[A-Za-z0-9]+$".
　　只能输入由数字、26个英文字母或者下划线组成的字符串："^/w+$"。
　　验证用户密码："^[a-zA-Z]/w{5,17}$"正确格式为：以字母开头，长度在6~18之间，只能包含字符、数字和下划线。
　　验证是否含有^%&',;=?$/"等字符："[^%&',;=?$/x22]+"。
　　只能输入汉字："^[/u4e00-/u9fa5]{0,}$"
　　验证Email地址："^/w+([-+.]/w+)*@/w+([-.]/w+)*/./w+([-.]/w+)*$"。
　　验证InternetURL："^http://([/w-]+/.)+[/w-]+(/[/w-./?%&=]*)?$"。
　　验证电话号码："^(/(/d{3,4}-)|/d{3.4}-)?/d{7,8}$"正确格式为："XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX"。
　　验证身份证号(15位或18位数字)："^/d{15}|/d{18}$"。
　　验证一年的12个月："^(0?[1-9]|1[0-2])$"正确格式为："01"～"09"和"1"～"12"。
　　验证一个月的31天："^((0?[1-9])|((1|2)[0-9])|30|31)$"正确格式为;"01"～"09"和"1"～"31".
